#! /usr/bin/env python3
# -*- Python -*-

"""
Get recent merges from /syn/eu/ac/results/chains-202105 via sshfs
"""

import sys, os, traceback, logging
from pathlib import Path
import acmacs

sChainsDir = Path("/syn/eu/ac/results/chains-202105")

# ----------------------------------------------------------------------

def main(args):
    if "/ac/results/ssm/" not in os.getcwd():
        raise RuntimeError("invalid current directory, must be under results/ssm")
    merges_dir = Path("merges")
    merges_dir.mkdir(exist_ok=True)
    merges_dir = merges_dir.resolve()
    for chain_dir in sChainsDir.glob("*"):
        if startswith(chain_dir.name, "h1pdm-", "h3-", "bvic-", "byam-"):
            get_merge_from(chain_dir)

# ======================================================================

def get_merge_from(chain_dir):
    pass

# ======================================================================

def startswith(name, *prefixes):
    return any(name.startswith(prefix) for prefix in prefixes)

# ----------------------------------------------------------------------

try:
    import argparse
    parser = argparse.ArgumentParser(description=__doc__)
    # parser.add_argument('--lab', action='store', dest='lab', default=None)
    # parser.add_argument('--flu', action='store', dest='flu', default=None)
    parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
    # parser.add_argument('-v', '--verbose', action='store_true', dest='verbose', default=False)

    # parser.add_argument('target_dir', nargs=1, action='store')

    args = parser.parse_args()
    logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s [%(name)s.%(funcName)s %(lineno)d]")
    exit_code = main(args)
except Exception as err:
    logging.error('{}\n{}'.format(err, traceback.format_exc()))
    exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
