#! /usr/bin/env python3
# -*- Python -*-

"""
make h1pdm overlay merge
"""

import sys, os, traceback
if f"{sys.version_info.major}.{sys.version_info.minor}" < "3.7": raise RuntimeError("Run script with python 3.7+")
from pathlib import Path
sys.path[:0] = [str(Path(os.environ["ACMACSD_ROOT"]).resolve().joinpath("py"))]
import logging; module_logger = logging.getLogger(__name__)

from acmacs_base import timeit
from acmacs_whocc.h1_overlay import h1_overlay_relax

# ----------------------------------------------------------------------

def main(args):
    sources = list(pa for pa in Path(args.target_dir[0]).glob("*-h1-hi.ace") if pa.name.split('-')[0] in ["cdc", "melb", "niid", "nimr"])
    h1_overlay_relax(sources=sources, target=Path(args.target_dir[0]))

# ----------------------------------------------------------------------

with timeit(sys.argv[0]):
    try:
        import argparse
        parser = argparse.ArgumentParser(description=__doc__)
        parser.add_argument('-d', '--debug', action='store_const', dest='loglevel', const=logging.DEBUG, default=logging.INFO, help='Enable debugging output.')
        parser.add_argument('-v', '--verbose', action='store_true', dest='verbose', default=False)

        parser.add_argument('target_dir', nargs=1, action='store')

        args = parser.parse_args()
        logging.basicConfig(level=args.loglevel, format="%(levelname)s %(asctime)s: %(message)s [%(name)s.%(funcName)s %(lineno)d]")
        exit_code = main(args)
    except Exception as err:
        logging.error('{}\n{}'.format(err, traceback.format_exc()))
        exit_code = 1
exit(exit_code)

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
