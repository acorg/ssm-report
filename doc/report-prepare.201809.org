#+STARTUP: x-showall
#+STARTUP: x-indent
# Time-stamp: <2019-01-25 12:05:04 eu>
* Gisaid [[file:~/AD/sources/acmacs-whocc/doc/gisaid.org][instructions for downloading sequences from gisaid]]
* update hidb on albertine ~1.5min
whocc-update-ace-store && whocc-hidb5-update
* initialize report dirs (run in terminal: asks password!)
#+BEGIN_SRC bash
mkdir ~/ac/results/ssm/YYYY-MMDD-tc1 && cd ~/ac/results/ssm/YYYY-MMDD-tc1
ssm-report init
#+END_SRC
running time: ~ 25 min (asks acmacs-web password in few minutes after start)
** The command above performs:
*** inits git at albertine:who-reports and local
*** downloads hidb from albertine
*** makes seqdb from all fasta files, not found location names saved to log/not-found-locations.txt
*** downloads merges from acmacs-web
*** makes h1pdm overlay merge
*** generates settings files
** Individual commands:
*** update hidb on albertine: whocc-update-ace-store && whocc-hidb5-update
*** download hidb from albertine: hidb-get-from-albertine && cp ~/AD/data/hidb5.* db
*** just re-make seqdb (in case of downloading new sequences or fixing locations)
  ad ssm-report remake-seqdb
  running time: ~ 8 min

seqdb-create --db /d/seqdb.json.xz --match-hidb --clades --report-not-aligned-prefixes 32 --save-not-found-locations /d/not-found.txt ~/ac/tables-store/sequences/*.fas.*
*** copy seqdb to ~/AD/data: cp db/seqdb.json.xz ~/AD/data && rsync -v ~/AD/data/seqdb* albertine:AD/data
*** sync ~/ac/results/ssm/YYYY-MMDD-* and ~/AD/data/seqdb.json.xz to syn: ./sy && rsync ~/AD/data/seqdb.json.xz albertine:AD/data
*** update merges (in case new tables arrived and processed) and hidb
ssm-report update-merges
  on albertine: ad hidb-update-hidb /syn/eu/log/whocc-hidb5-update.log (~1.5min)
rm -f stat/* geo/*; ssm-report --force update_hidb stat geo
*** re-make H1pdm overlay merge (~18min)
ssm-report h1-overlay
* edit report.json
  "cover"
  "time_series" (at the end)
  "previous"
* edit setting files
e *.json
* make stat
ssm-report --force stat
* make trees on albertine
** run make-signature-pages
cd /syn/eu/ac/results/signature-pages
make-signature-pages -t $(date +%Y-%m%d) --flu h3 --seqdb ~/AD/data/seqdb.json.xz --tree-maker-speed week
make-signature-pages -t $(date +%Y-%m%d) --flu h1 --seqdb ~/AD/data/seqdb.json.xz --tree-maker-speed week
make-signature-pages -t $(date +%Y-%m%d) --flu bv --seqdb ~/AD/data/seqdb.json.xz --tree-maker-speed week
make-signature-pages -t $(date +%Y-%m%d) --flu by --seqdb ~/AD/data/seqdb.json.xz --tree-maker-speed week

? it generates trees and various pdfs in /syn/eu/ac/results/whocc-tree/YYYY-MMDD. to view the results visit
? https://notebooks.antigenic-cartography.org/eu/results/whocc-tree/YYYY-MMDD/H1.safari.html
? https://notebooks.antigenic-cartography.org/eu/results/whocc-tree/YYYY-MMDD/H3.safari.html
? https://notebooks.antigenic-cartography.org/eu/results/whocc-tree/YYYY-MMDD/BV.safari.html
? https://notebooks.antigenic-cartography.org/eu/results/whocc-tree/YYYY-MMDD/BY.safari.html
? 
? get trees:
? sp_dir=i19:ac/results/signature-pages/2019-0102
? for v in h1 h3 bv by; do if [ ! -f tree/$v.tree.json.xz ]; then scp ${sp_dir}/$v/tree.json.xz tree/$v.tree.json.xz; scp ${sp_dir}/$v/tree.settings.json tree/$v.tree.settings.json; fi; done
? ln -s BV.tree.json.xz tree/bvic.tree.json.xz; ln -s BY.tree.json.xz tree/byam.tree.json.xz
? rsync -Lv i19:/syn/eu/ac/results/whocc-tree/YYYY-MMDD/\*.tree.json.xz tree

then run:
ssm-report h1-tree
ssm-report h3-tree
ssm-report bv-tree
ssm-report by-tree
ssm-report tree
* make maps
ssm-report geo

  args: stat geo
        h1-clade h1-ts h1-serology
        h3-ts h3-clade h3-geo h3-serology
        h3neut-ts h3neut-clade h3neut-geo h3neut-serology
        bv-ts bv-clade bv-serology
        by-ts by-clade by-serology
        update-merges
        h1-overlay (~17min)

** make lispmds save colored by clade
acmacs-map-draw --clade --save merges/cdc-h3-neut.clade.save merges/cdc-h3-neut.ace
* serum coverage maps
** init
ssm-report serumcoverage-init
   if (serumcoverage/<lab>-h3-<assay>.json absent)
     $ chart-serum-circles <merge.ace> --json serumcoverage/<lab>-h3-<assay>.json
** report circle radii
ssm-report serumcircle-report-cdc-h3-hi
ssm-report serumcircle-report-cdc-h3-neut
ssm-report serumcircle-report-melb-h3-hi
ssm-report serumcircle-report-melb-h3-neut
ssm-report serumcircle-report-niid-h3-neut
ssm-report serumcircle-report-nimr-h3-hi
ssm-report serumcircle-report-nimr-h3-neut
** make plots
index-serumcoverage-<lab>-<assay>.html are generated by the commands
below.  Reviewer should select sr-ag rows in those pages, click export
button at the top, send generated serumcoverage-reviewed-<lab>-h3-<assay>.DATE.json
file to me.

ssm-report h3-cov       ~4 hours!
ssm-report h3neut-cov   ~40 min

ssm-report serumcoverage-h3-hi
ssm-report serumcoverage-h3-neut

ssm-report serumcoverage-cdc-h3-hi
ssm-report serumcoverage-cdc-h3-neut
ssm-report serumcoverage-melb-h3-hi
ssm-report serumcoverage-melb-h3-neut
ssm-report serumcoverage-niid-h3-neut
ssm-report serumcoverage-nimr-h3-hi
ssm-report serumcoverage-nimr-h3-neut
** make report
serumcoverage-reviewed-<lab>-h3-<assay>.DATE.json files generated by a
reviewer and sent by email are placed in the root dir of the ssm-report
tree.

Report is generated from report-serumcoverage.json and serumcoverage-reviewed-<lab>-h3-<assay>.DATE.json files

$ ssm-report report-serumcoverage

* make trees

  ssm-report tree

  Upon making initial trees, edit settings in tree/

  If not all trees are ready, it's possible to make individual trees

  ssm-report h1-tree
  ssm-report h3-tree
  ssm-report by-tree
  ssm-report bv-tree

* make report
ssm-report report
upload report to https://worldhealthorg-my.sharepoint.com/:f:/r/personal/lievrem_who_int/Documents/Shared/InfluenzaVCM?csf=1&e=Oz64DA
* make signature pages

  ssm-report sp
  ssm-report sp-h3-cdc
  ssm-report sp-h3neut-cdc

* make addendum with the signature pages

  ssm-report addendum
* information meeting tree
commands below make changes to tree/*.tree.settings.json and save them as tree/*.tree.information.json

ssm-report h1-tree-information
ssm-report h3-tree-information
ssm-report bv-tree-information
ssm-report by-tree-information
* COMMANDS
** update hidb on albertine: whocc-update-ace-store && whocc-hidb5-update
** download hidb from albertine, update stat and geo: hidb-get-from-albertine && cp ~/AD/data/hidb5.* db && rm -f stat/* geo/* && ssm-report --force stat geo
* COMMENT ---- local vars
# ======================================================================
# Local Variables:
# eval: (auto-fill-mode 0)
# eval: (add-hook 'before-save-hook 'time-stamp)
# End:

