* Gisaid
** visit [[http://gisaid.org][gisaid]] and login (at right)
** Click EpiFlu (top middle)
** Hold Cmd and click A and B in the Type.
** Set COLLECTION date From to 2017-12-17 (or later depending on the number of isolates upon search, see below)
** _Leave originating lab empty!_
** Select **Submitting lab** them all using Cmd

    (Change height of the submitting lab <select> 500px)

         [Australia, North Melbourne] WHO CC ...
         [United Kingdom, London] National Institute for Medical Research
         [United Kingdom, London] Crick
         [United states, Atlanta] CDC
         ? [China, Bejing] WHO Chinese National Influenza Center

** Required segments: HA
** Click Search. Total must not exceed 20k isolates (gisaid does not allow downloading more)
** Click leftmost checkbox in header to select all
** Click Download
** Format: Sequences (DNA) as FASTA
** DNA: HA
** FASTA Header: Isolate name |  Collection date | Passage details/history |  Sample ID by submitting lab | Submitting lab | Type |  Lineage
** Date format: YYYY-MM-DD
** Click download
** Install file: ~/AD/sources/ssm-report/bin/gisaid-fasta-install (just run it without arguments)
** make seqdb from newly downloaded fasta file only just to check file content and hidb matching
   ad seqdb-create --db /r/seqdb.json.xz --match-hidb --clades --report-not-aligned-prefixes 32 --save-not-found-locations /r/not-found.txt ~/ac/tables-store/sequences/gisaid-all-20170801-20171104.fas.bz2
   ad seqdb-info /r/seqdb.json.xz
* initialize report dirs (run in terminal: asks password!)
#+BEGIN_SRC bash
mkdir ~/ac/results/ssm/YYYY-MMDD-tc1 && cd ~/ac/results/ssm/YYYY-MMDD-tc1
ad ssm-report init
#+END_SRC
running time: ~ 25 min (asks acmacs-web password in few minutes after start)
** The command above performs:
*** inits git at albertine:who-reports and local
*** downloads hidb from albertine
*** makes seqdb from all fasta files, not found location names saved to log/not-found-locations.txt
*** downloads merges from acmacs-web
*** makes h1pdm overlay merge
*** generates settings files
** Individual commands:
*** update hidb on albertine: ad whocc-update-ace-store && ad whocc-hidb5-update
*** download hidb from albertine: ad hidb-get-from-albertine && cp ~/AD/data/hidb5.* db
*** just re-make seqdb (in case of downloading new sequences or fixing locations)
  ad ssm-report remake-seqdb
  running time: ~ 8 min
*** copy seqdb to ~/AD/data: cp db/seqdb.json.xz ~/AD/data && rsync ~/AD/data/seqdb.json.xz albertine:AD/data
*** sync ~/ac/results/ssm/YYYY-MMDD-* and ~/AD/data/seqdb.json.xz to syn: ./sy && rsync ~/AD/data/seqdb.json.xz albertine:AD/data
*** update merges (in case new tables arrived and processed) and hidb
  ad ssm-report update-merges (run in terminal, asks password)
  on albertine: $ACMACSD_ROOT/bin/hidb-update-hidb /syn/eu/log/whocc-hidb5-update.log (~1.5min)
  rm -f stat/* geo/*; ad ssm-report --force update_hidb stat geo
*** re-make H1pdm overlay merge (~18min)
  ad ssm-report h1-overlay
* edit report.json
  "cover"
  "time_series" (at the end)
  "previous"
* edit setting files
e *.json
* make stat
  ad ssm-report --force stat
* make trees on albertine
** prepare directories
(on jagd) ./sy
(on albertine) ad make-trees-on-albertine --garli 256 --raxml 256 ~/ac/results/ssm/YYYY-MMDD-tc1/db/seqdb.json.xz
-> tree-maker wait will be running in background and will send email on completion
** upon tree building completion download tree files (tree.json.xz) from /syn/eu/ac/results/whocc-tree/ to ~/ac/results/ssm/YYYY-MMDD-*/tree/
ad ssm-report get-trees-from-albertine
OR
  for vt in bvic byam h1 h3; do scp albertine:/syn/eu/ac/results/whocc-tree/YYYY-MMDD-HHMM/$vt/tree.json.xz tree/$vt.tree.json.xz; done

  scp albertine:/syn/eu/ac/results/whocc-tree/2018-0206-1320/byam/tree.json.xz tree/byam.tree.json.xz
  scp albertine:/syn/eu/ac/results/whocc-tree/2018-0206-1320/bvic/tree.json.xz tree/bvic.tree.json.xz
  scp albertine:/syn/eu/ac/results/whocc-tree/2018-0206-1320/h1/tree.json.xz tree/h1.tree.json.xz
  scp albertine:/syn/eu/ac/results/whocc-tree/2018-0206-1320/h3/tree.json.xz tree/h3.tree.json.xz
** preview trees
for vt in bvic byam h1 h3; do ad sigp --db-dir db tree/$vt.tree.json.xz $T/$vt.pdf --open; done
** OLD prepare directories (before 2017-12-15)
(on jagd) ./syput
RD=/syn/eu/ac/results/ssm/YYYY-MMDD-???/db; D=$(date +%Y-%m%d-%H%M) && for V in bvic byam h1 h3; do mkdir /syn/eu/ac/results/whocc-tree/$V/$D; cp $RD/seqdb.json.xz /syn/eu/ac/results/whocc-tree/$V/$D; done
*** in each directory export sequences to fasta
unset v_base && declare -A v_base && v_base=([h3]="HAWAII/22/2012 MDCK" [h1]="SWITZERLAND/9772556/2013 SIAT2" [bvic]="VICTORIA/830/2013 MDCK2" [byam]="B/CHRISTCHURCH/503/2013 MDCK1") && for v in "${!v_base[@]}"; do ( cd /syn/eu/ac/results/whocc-tree/$v/$D && ad seqdb-export --db ./seqdb.json.xz --flu $v --recent 4000 --hamming-distance-threshold 160 --tree-maker --base-seq "${v_base[$v]}" source.fas ); done
*** in each directory initialize the tree maker
for V in bvic byam h1 h3; do ( cd /syn/eu/ac/results/whocc-tree/$V/$D && ad tree-maker init ); done
*** in each directory edit tree-maker.config:
for V in bvic byam h1 h3; do ea /syn/eu/ac/results/whocc-tree/$V/$D/tree-maker.config; done
**** modify "machines", "garli_num_runs", "raxml_num_runs"
*** in each directory submit maker (in a separate tmux window) and wait for completion
T=$(tmux new-window -n TREE -P "sleep 3; /home/eu/bin/iterm-badge bvic; cd /syn/eu/ac/results/whocc-tree/bvic/$D; pwd; ad tree-maker wait; bash"); tmux split-window -t "$T" "sleep 3; iterm-badge byam; cd /syn/eu/ac/results/whocc-tree/byam/$D; pwd; ad tree-maker wait; bash"; tmux split-window -h -t "$T" "sleep 3; iterm-badge h1; cd /syn/eu/ac/results/whocc-tree/h1/$D; pwd; ad tree-maker wait; bash"; tmux split-window -h -t "$T" "sleep 3; iterm-badge h3; cd /syn/eu/ac/results/whocc-tree/h3/$D; pwd; ad tree-maker wait; bash"
# ad tree-maker wait
*** upon tree building completion download tree files (tree.json.xz) from /syn/eu/ac/results/whocc-tree/ to ~/ac/results/ssm/YYYY-MMDD-*/tree/
for vt in bvic byam h1 h3; do scp albertine:/syn/eu/ac/results/whocc-tree/$vt/YYYY-MMDD-HHMM/tree.json.xz tree/$vt.tree.json.xz; done
* make maps
ad ssm-report geo

  args: stat geo
        h1-clade h1-ts h1-serology
        h3-ts h3-clade h3-geo h3-serology
        h3neut-ts h3neut-clade h3neut-geo h3neut-serology
        bvic-ts bvic-clade bvic-serology
        byam-ts byam-clade byam-serology
        update-merges
        h1-overlay (~17min)

** make lispmds save colored by clade
ad acmacs-map-draw --clade --save merges/cdc-h3-neut.clade.save merges/cdc-h3-neut.ace
* serum coverage maps
** init
ad ssm-report serumcoverage-init
   if (serumcoverage/<lab>-h3-<assay>.json absent)
     $ ad chart-serum-circles <merge.ace> --json serumcoverage/<lab>-h3-<assay>.json
** report circle radii
ad ssm-report serumcircle-report-cdc-h3-hi
ad ssm-report serumcircle-report-cdc-h3-neut
ad ssm-report serumcircle-report-melb-h3-hi
ad ssm-report serumcircle-report-melb-h3-neut
ad ssm-report serumcircle-report-niid-h3-neut
ad ssm-report serumcircle-report-nimr-h3-hi
ad ssm-report serumcircle-report-nimr-h3-neut
** make plots
index-serumcoverage-<lab>-<assay>.html are generated by the commands
below.  Reviewer should select sr-ag rows in those pages, click export
button at the top, send generated serumcoverage-reviewed-<lab>-h3-<assay>.DATE.json
file to me.

ad ssm-report h3-cov
ad ssm-report h3neut-cov

ad ssm-report serumcoverage-h3-hi
ad ssm-report serumcoverage-h3-neut

ad ssm-report serumcoverage-cdc-h3-hi
ad ssm-report serumcoverage-cdc-h3-neut
ad ssm-report serumcoverage-melb-h3-hi
ad ssm-report serumcoverage-melb-h3-neut
ad ssm-report serumcoverage-niid-h3-neut
ad ssm-report serumcoverage-nimr-h3-hi
ad ssm-report serumcoverage-nimr-h3-neut
** make report
serumcoverage-reviewed-<lab>-h3-<assay>.DATE.json files generated by a
reviewer and sent by email are placed in the root dir of the ssm-report
tree.

Report is generated from report-serumcoverage.json and serumcoverage-reviewed-<lab>-h3-<assay>.DATE.json files

$ ad ssm-report report-serumcoverage

* make trees

  ad ssm-report tree

  Upon making initial trees, edit settings in tree/

  If not all trees are ready, it's possible to make individual trees

  ad ssm-report h1-tree
  ad ssm-report h3-tree
  ad ssm-report byam-tree
  ad ssm-report bvic-tree

* make report

  $ACMACSD_ROOT/bin/ssm-report --working-dir . report

* make signature pages

  ad ssm-report sp
  ad ssm-report sp-h3-cdc
  ad ssm-report sp-h3neut-cdc

* make addendum with the signature pages

  ad ssm-report addendum
* information meeting tree
commands below make changes to tree/*.tree.settings.json and save them as tree/*.tree.information.json

ad ssm-report h1-tree-information
ad ssm-report h3-tree-information
ad ssm-report bvic-tree-information
ad ssm-report byam-tree-information
